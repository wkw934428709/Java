import java.util.ArrayList;import java.util.Scanner;public class Main {    static String NUM = "1000000000000000000";    static String ZERO = "000000000000000000";    static String isNegative = "";    static String result;    //	static char[] chineseNum = {'一', '十', '百', '千', '万', '亿'};    static char[] chineseNum = {'一', '二', '三', '四', '五', '六'};        public static void main(String[] args) {                String input = "HAHA";        String output = "";                while(!input.equals("")) {            System.out.println("Please input the number : \n");            Scanner sc = new Scanner(System.in);            input = sc.nextLine();            try {                                //Day1//                output = eval(input);                                //Day2                output = number2Chinese(input);                            } catch (Exception e) {                System.out.println("Wrong Input :( ");                continue;            } finally {                if (!output.equals("")) {                    return;                }            }        }    }                private static String number2Chinese(String input) {        StringBuffer output = new StringBuffer();        int len = input.length();        boolean isZero = false;        char[] chineseNumArr = new char[] { '零', '一', '二', '三', '四', '五', '六', '七', '八', '九' };        char[] indexArr = new char[] { '\0', '十', '百', '千', '万', '十', '百', '千', '亿', '十', '百', '千'};                for (int j = 0; j <len; j++) {            char chNum = chineseNumArr[Integer.parseInt(input.charAt(j) + "")];            char index = indexArr[len - 1 - j];            if (chNum == '零') {                isZero = true;                if (index == '亿' || index == '万') {                    output.append(index);                    //						isZero = false;                }                continue;            }                        if (isZero) {                output.append('零');                isZero = false;            }            //				System.out.println(" chineseNum : " + chNum  + "  index " + index);            output.append(chNum).append(index);            //				System.out.println(" output : " + output);        }        System.out.println(" Result : " + output);        return output.toString();    }    private static String eval(String tt) {        tt = tt.replace(" ", "");        tt = tt.replace("\n", "");        if (tt.indexOf('+') != -1) {            String[] input = formatInput(tt, '+');            tt = add(input[0], input[1]);        } else if (tt.indexOf('-') != -1) {            String[] input = formatInput(tt, '-');            tt = minus(input[0], input[1]);        } else if (tt.indexOf('*') != -1) {                    } else if (tt.indexOf('/') != -1) {                    } else {            System.out.println(" Wrong input! ");        }        return tt;    }    private static String[] formatInput(String tt, char c) {        // TODO Auto-generated method stub        String[] input = new String[2];        int index = tt.indexOf(c);        //		System.out.println(" tt " + tt);        //		System.out.println(" index " + index);        input[0] = tt.substring(0, index);        input[1] = tt.substring(index + 1, tt.length());        return input;    }    private static String minus(String inputStr1, String inputStr2) {        result = "";        String sign = "";        if(inputStr1.equals(inputStr2)){            return "0";        }        if(inputStr1.length() < inputStr2.length()           || (inputStr1.length() == inputStr2.length() && inputStr1.compareTo(inputStr2) < 0)){            sign = "-";            String tmp = inputStr1;            inputStr1 = inputStr2;            inputStr2 = tmp;        }        while(inputStr2.length() < inputStr1.length()){            inputStr2 = "0" + inputStr2;        }        int index = inputStr1.length() - 1;        int borrow = 0;        while(index >= 0){            int left = inputStr1.charAt(index) - inputStr2.charAt(index) + borrow;            if(left < 0){                borrow = -1;                left += 10;            }            result = left + result;            index--;        }        while(result.indexOf("0") == 0){            result = result.substring(1);        }        System.out.println("Minus  result =  " +  sign + result);        return sign + result;    }    private static String add(String inputStr1, String inputStr2) {                //		String inputStr1 = "123456789012345678901234567890123456790";        //		String inputStr2 = "9876543210987654321098765432109876543210";        //		String inputStr2 = "1";        int lenStr1 = inputStr1.length();        int lenStr2 = inputStr2.length();        int count1 = (int) (lenStr1 / 18);        int count2 = (int) (lenStr2 / 18);        //		 System.out.println(" lenStr1 " + lenStr1);        //		 System.out.println(" lenStr2 " + lenStr2);        //		 System.out.println(" count2 " + count2);        ArrayList<String> list1 = new ArrayList<String>();        ArrayList<String> list2 = new ArrayList<String>();                int index1 = 1;        while(count1 >= 0) {            int start = lenStr1 - index1 * 18;            int end = lenStr1 - (index1 -1) * 18;            end = end < 0 ? lenStr1 : end;            start = start < 0 ? 0 : start;            //			 System.out.println(start);            //			 System.out.println(end);            list1.add(inputStr1.substring(start, end));            index1++;            count1--;        }                int index2 = 1;        while(count2 >= 0) {            int start = lenStr2 - index2 * 18;            int end = lenStr2 - (index2 -1) * 18;            end = end < 0 ? lenStr2 : end;            start = start < 0 ? 0 : start;            //			 System.out.println(start);            //			 System.out.println(end);            list2.add(inputStr2.substring(start, end));            index2++;            count2--;        }                //		for (int i = 0; i < list1.size(); i++) {        //			 System.out.println(" list1 : " + list1.get(i));        //		}        //		for (int i = 0; i < list2.size(); i++) {        //			 System.out.println(" list2 : " + list2.get(i));        //		}                int MinSize = list1.size() < list2.size() ? list1.size() : list2.size();        int MaxSize = list1.size() > list2.size() ? list1.size() : list2.size();        //		 System.out.println(" MaxSize : " +MaxSize);        //		 System.out.println(" MinSize : " +MinSize);        int fur = 0;        StringBuffer result = new StringBuffer("");                for (int i = 0; i < MinSize; i++) {            String add = Cal.add(list1.get(i), list2.get(i));            if (add.length() > 18) {                fur = 1;            } else {                fur = 0;            }            add = Long.valueOf(add) + fur + "";            result = result.insert(0, add);        }                if (MaxSize == MinSize) {            System.out.println("Add  result =  " + result);             return result.toString();        }                for (int i = MaxSize - MinSize; i < MaxSize; i++){            if (list1.size() > list2.size()) {                result = result.insert(0, list1.get(i));            } else {                result = result.insert(0, list2.get(i));            }                    }                //		 System.out.println(Long.MAX_VALUE + " : " + Long.MIN_VALUE);          System.out.printf("Add result = \n", result);         return result.toString();    }    static class Cal {        public  static String add(String strNum1, String strNum2) {            long num1 = Long.valueOf(strNum1.trim());            long num2 = Long.valueOf(strNum2.trim());            return num1 + num2 + "";        }                public  static String minus(String strNum1, String strNum2) {            long num1 = Long.valueOf(strNum1.trim());            long num2 = Long.valueOf(strNum2.trim());            return num1 - num2 + "";        }    }}